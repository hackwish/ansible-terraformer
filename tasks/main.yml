---
# tasks file for ansible-terraformer
- name: check if terraformer exists
  stat: 
    path: /opt/terraformer/bin/terraformer
  register: terraformer_exists
  tags: terraformer
  
- name: Create terraformer directory
  ansible.builtin.file:
    path: /opt/terraformer
    state: directory
    mode: '0755'
  tags: terraformer
  when: terraformer_exists.stat.exists == False

- name: Get latest Release from terraformer
  shell: curl -Lo /opt/terraformer/terraformer https://github.com/GoogleCloudPlatform/terraformer/releases/download/$(curl -s https://api.github.com/repos/GoogleCloudPlatform/terraformer/releases/latest | grep tag_name | cut -d '"' -f 4)/terraformer-all-linux-amd64
  # args:
  #   warn: no
  tags: terraformer

- name: Change file ownership, group and permissions
  ansible.builtin.file:
    path: /opt/terraformer/terraformer
    owner: root
    group: root
    mode: '0755'
  tags: terraformer

- name: Verify terraformer exists
  stat: path=/opt/terraformer/terraformer
  register: terraformer_stat
  tags: terraformer

- name: Configure terraformer on system bin.
  file:
    src: "/opt/terraformer/terraformer"
    dest: "/usr/bin/terraformer"
    state: link
  when: terraformer_stat.stat.exists
  tags: terraformer

- name: Configure terraformer on system sbin.
  file:
    src: "/opt/terraformer/terraformer" 
    dest: "/usr/sbin/terraformer"
    state: link
  when: terraformer_stat.stat.exists
  tags: terraformer

# Customize Per existing user
- name : list users to apply terraformer
  shell: |
    getent passwd | awk -F: '$3 > 999 {print $1}'
  register: users
  tags: terraformer

- debug:
    var: users
    verbosity: 2

- name: Create user bin directory
  file: path=/home/{{ item }}/.local/bin/ state=directory mode="a+rw"
  when: terraformer_stat.stat.exists
  with_items: "{{ users.stdout_lines }}"
  tags: terraformer

- name: Configure terraformer on user bin.
  file:
    src: "/opt/terraformer/terraformer"
    dest: "/home/{{ item }}/.local/bin/terraformer"
    state: link
  with_items: "{{ users.stdout_lines }}"
  when: terraformer_stat.stat.exists
  tags: terraformer

- name: Create user bin directory
  file: path=/home/{{ item }}/.local/bin/ state=directory mode="a+rw"
  when: terraformer_stat.stat.exists
  with_items: "{{ users.stdout_lines }}"
  tags: terraformer

- name: update terraformer on users bashrc
  lineinfile:
    dest: /home/{{ item }}/.bashrc
    state: present
    line: 'export PATH="/opt/terraformer/:$PATH"'
  with_items: "{{ users.stdout_lines }}"
  tags: terraformer
  ignore_errors: true

- name: update terraformer on skel bashrc
  lineinfile:
    dest: /etc/skel/.bashrc
    state: present
    line: 'export PATH="/opt/terraformer/:$PATH"'
  tags: terraformer

# Check status
- shell: which terraformer
  args:
    executable: /bin/bash -ilc
  register: which_terraformer
  failed_when: false
  changed_when: false
  tags: terraformer

- debug:
    var:  which_terraformer.stdout
    verbosity: 2

- command: terraformer version
  register: result_terraformer
  failed_when: false
  changed_when: false
  tags: terraformer

- debug:
    var: result_terraformer.stdout
  tags: terraformer